definitions:
  httpserver.errorResponse:
    properties:
      error:
        type: string
    type: object
  tokens.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
info:
  contact: {}
paths:
  /guid:
    get:
      consumes:
      - application/json
      description: Проверяет валидность токенов и возвращает GUID пользователя
      parameters:
      - description: Токены для валидации
        in: body
        name: tokens
        required: true
        schema:
          $ref: '#/definitions/tokens.Tokens'
      produces:
      - application/json
      responses:
        "200":
          description: GUID пользователя
          schema:
            $ref: '#/definitions/httpserver.errorResponse'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/httpserver.errorResponse'
        "401":
          description: Невалидные токены
          schema:
            $ref: '#/definitions/httpserver.errorResponse'
      summary: Валидация токенов и получение GUID
      tags:
      - auth
  /logout:
    get:
      consumes:
      - application/json
      description: Деавторизует пользователя по его GUID (инвалидирует токены)
      parameters:
      - description: Токены для деавторизации
        in: body
        name: tokens
        required: true
        schema:
          $ref: '#/definitions/tokens.Tokens'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная деавторизация
          schema:
            $ref: '#/definitions/httpserver.errorResponse'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/httpserver.errorResponse'
        "401":
          description: Невалидные токены
          schema:
            $ref: '#/definitions/httpserver.errorResponse'
      summary: Деавторизация пользователя
      tags:
      - auth
  /refresh:
    post:
      consumes:
      - application/json
      description: Обновляет JWT и refresh-токен, если текущие валидны
      parameters:
      - description: Текущие токены
        in: body
        name: tokens
        required: true
        schema:
          $ref: '#/definitions/tokens.Tokens'
      produces:
      - application/json
      responses:
        "200":
          description: Новые токены
          schema:
            $ref: '#/definitions/tokens.Tokens'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/httpserver.errorResponse'
        "401":
          description: Невалидные токены
          schema:
            $ref: '#/definitions/httpserver.errorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/httpserver.errorResponse'
      summary: Обновление токенов
      tags:
      - auth
  /tokens:
    get:
      consumes:
      - application/json
      description: Генерирует и возвращает JWT и refresh-токен для указанного GUID
      parameters:
      - description: Уникальный идентификатор пользователя
        in: query
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tokens.Tokens'
        "400":
          description: Ошибка запроса
          schema:
            $ref: '#/definitions/httpserver.errorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/httpserver.errorResponse'
      summary: Получение токенов
      tags:
      - auth
swagger: "2.0"
